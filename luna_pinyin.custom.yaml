# Rime schema
# encoding: utf-8
##  取消注释（删除行开头的单个 # 符号）或添加注释（行开头加 #）即可启用该设置项。
##  注意不要删除前面的空格，YAML 文件的缩进比较严格，缩进不对容易报错。

patch:
  'punctuator/half_shape/"' : { pair: [ '‘', '’' ] } ## 添加注释后：恢复默认引号
  "punctuator/half_shape/'" : { pair: [ '“', '”' ] } ## 添加注释后：恢复默认引号
  "punctuator/half_shape/>": [》, 〉, '> ', », › ]
  key_binder/bindings/+:
    - { when: composing, accept: Control+m, send: Return }
    - { when: composing, accept: Control+w, send: Control+BackSpace }
    - { when: has_menu, accept: semicolon, send: 2 } ## 分号;用于第2候选
    #- { when: has_menu, accept: slash, send: 3 } ## 斜线/用于第3候选
    #- { when: has_menu, accept: apostrophe, send: 3 } ## 单引号'用于第3候选
  ##  用户词典记录为文本格式（默认为二进制）。如果发现重启/部署/同步之后经常
  ##  忘掉之前输入的词（例如 Linux ibus-rime.appimage 的用户），可以尝试开启。
  #translator/db_class: tabledb
  ##  flypy_zrmfast.custom.yaml 所提到的“临时全拼模式下使用扩展词典”的步骤 3：
  #translator/dictionary: luna_pinyin.extended
  punctuator/half_shape/+:
    '/er': [ 二, 貳, ₂, ², Ⅱ, ⅱ, ②, ➁, ❷, ➋, ⓶, ⑵, ⒉, ２, ㊁, ㈡, 弍, 弐, 貮, 㒃, 㒳, 兩, 倆, ㆓]
    '/san': [ 三, 叄, ₃, ³, Ⅲ, ⅲ, ③, ➂, ❸, ➌, ⓷, ⑶, ⒊, ３, ㊂, ㈢, 參, 参, 叁, 弎, 仨, ㆔]
    '/si': [ 四, 肆, ₄, ⁴, Ⅳ, ⅳ, ④, ➃, ❹, ➍, ⓸, ⑷, ⒋, ４, ㊃, ㈣, 亖]
    '/zb': [┌, └, ┐, ┘, ─, │, ├, ┤, ┬, ┴, ┼, ┏, ┗, ┓, ┛, ━, ┃, ┣, ┫, ┳, ┻, ╋] ## 制表符
  engine/translators:
    - punct_translator
    - reverse_lookup_translator
    - script_translator
    - table_translator@custom_phrase
    - table_translator@emojis
    - table_translator@soft_capslock
    - table_translator@easy_en_simp
    - lua_translator@tex_translator
    - lua_translator@func_translator
    - table_translator
  engine/segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - affix_segmentor@emojis
    - affix_segmentor@verbatim
    - affix_segmentor@soft_capslock
    - affix_segmentor@easy_en_simp
    - affix_segmentor@tex_translator
    - fallback_segmentor
  recognizer:
    patterns:
      uppercase: "^[A-Z].*$"
      punct: '^/[015-9A-Za-z]+$' ## use "/er" instead of "/2"
      ## associate schemes: 
      reverse_lookup: "^ib[a-z]*'?$" # "[[]b[a-z]*'?$"
      emojis: "^ie[a-z]*'?$" # "^ae.*$" 
      verbatim: "^is.*$"
      soft_capslock: "^iu.*$"
      easy_en_simp: "^iw[a-z]*"
      tex_translator: "^il(.*)$"
      func_translator: "^if(.*)$"
  "reverse_lookup/prefix": "ib"
  # "schema/dependencies/@next": emoji
  custom_phrase:
    dictionary: ""
    user_dict: custom_phrase_lunapy
    db_class: stabledb
    enable_completion: false
    enable_sentence: false
    initial_quality: 1
  emojis:
    tag: emojis
    dictionary: emoji
    enable_completion: true
    prefix: "ie"
    suffix: "'"
    tips: " Emoji"
  verbatim:
    tag: verbatim ## english; ascii
    prefix: "is"
    tips: " ASCII"
  soft_capslock:
    dictionary: ""
    user_dict: uppercase
    tag: soft_capslock
    prefix: "iu"
    tips: "临时大写"
    db_class: stabledb
    enable_completion: false
    enable_sentence: true
    initial_quality: 1
  easy_en_simp:
    tag: easy_en_simp
    dictionary: easy_en
    enable_completion: true
    enable_sentence: false
    prefix: "iw"
    # suffix: "'"
    tips: "英文单词（可去元音）"
    spelling_hints: 9
    comment_format:
      - xform/^.+$//

